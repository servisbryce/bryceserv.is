2:I[8047,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Column"]
3:I[2092,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Button"]
4:I[9316,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Heading"]
5:I[8663,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Row"]
6:I[2060,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Text"]
8:I[1522,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"default"]
9:I[4707,[],""]
b:I[6423,[],""]
a:["slug","thecasefordynamicthreadpools","d"]
0:["CDRlzxYqm5xJyDNSguzlG",[[["",{"children":["blog",{"children":[["slug","thecasefordynamicthreadpools","d"],{"children":["__PAGE__?{\"slug\":\"thecasefordynamicthreadpools\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","thecasefordynamicthreadpools","d"],{"children":["__PAGE__",{},[["$L1",["$","$L2",null,{"as":"section","maxWidth":"xs","gap":"l","children":[["$","script",null,{"type":"application/ld+json","suppressHydrationWarning":true,"dangerouslySetInnerHTML":{"__html":"{\"@context\":\"https://schema.org\",\"@type\":\"BlogPosting\",\"headline\":\"The Case for Dynamic Thread Pools\",\"datePublished\":\"2025-04-06\",\"dateModified\":\"2025-04-06\",\"description\":\"The reasons why you should consider using dynamic thread pools in your applications.\",\"image\":\"https://bryceserv.is/images/gallery/thecasefordynamicthreadpools.jpg\",\"url\":\"https://bryceserv.is/blog/thecasefordynamicthreadpools\",\"author\":{\"@type\":\"Person\",\"name\":\"Bryce Servis\"}}"}}],["$","$L3",null,{"href":"/blog","weight":"default","variant":"tertiary","size":"s","prefixIcon":"chevronLeft","children":"Posts"}],["$","$L4",null,{"variant":"display-strong-s","children":"The Case for Dynamic Thread Pools"}],["$","$L5",null,{"gap":"12","vertical":"center","children":[false,["$","$L6",null,{"variant":"body-default-s","onBackground":"neutral-weak","children":"April 6, 2025"}]]}],["$","$L2",null,{"as":"article","fillWidth":true,"children":"$L7"}],["$","$L8",null,{}]]}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/4612b5a83fc9ad30.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$a","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/15b9922eb12b1bb5.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/bf5abfa89ee118e0.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/a8c4e1ca9815a60e.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/e578cf952a0222b2.css","precedence":"next","crossOrigin":"$undefined"}]],"$Lc"],null],null],["$Ld",null]]]]
e:I[1162,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Flex"]
f:I[6995,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"ToastProvider"]
10:I[124,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Background"]
11:I[9295,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Header"]
12:I[9890,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"Route"]
13:I[7868,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"IconButton"]
14:I[1288,["665","static/chunks/f97e080b-42dcf4837ed6a86e.js","240","static/chunks/53c13509-59dce8ec7d519f72.js","212","static/chunks/59650de3-fde12c1ab0f67ea8.js","516","static/chunks/f7333993-771a495057fa5276.js","452","static/chunks/5e22fd23-52eff41f1e309e93.js","464","static/chunks/464-5b46459779776405.js","835","static/chunks/835-8fb4eaa6b59c2403.js","7","static/chunks/7-579a9d1ce6ba923b.js","244","static/chunks/244-98f92ce0eeffaf1d.js","308","static/chunks/app/blog/%5Bslug%5D/page-e37bce5dbba1e4a0.js"],"HeadingLink"]
c:["$","$Le",null,{"as":"html","lang":"en","background":"page","data-neutral":"slate","data-brand":"aqua","data-accent":"aqua","data-solid":"contrast","data-solid-style":"flat","data-theme":"dark","data-border":"conservative","data-surface":"translucent","data-transition":"all","className":"__variable_d65c78 __variable_bcf733","children":["$","$Lf",null,{"children":["$","$L2",null,{"style":{"minHeight":"100vh"},"as":"body","fillWidth":true,"margin":"0","padding":"0","children":[["$","$L10",null,{"mask":{"cursor":false,"x":0,"y":0,"radius":75},"gradient":{"display":false,"x":50,"y":0,"width":100,"height":100,"tilt":0,"colorStart":"brand-background-strong","colorEnd":"static-transparent","opacity":50},"dots":{"display":false,"color":"brand-on-background-weak","size":1,"opacity":100},"grid":{"display":true,"color":"brand-background-strong","width":"$undefined","height":"$undefined","opacity":100},"lines":{"display":false,"opacity":100}}],["$","$Le",null,{"fillWidth":true,"minHeight":"16"}],["$","$L11",null,{}],["$","$Le",null,{"position":"relative","zIndex":0,"fillWidth":true,"paddingY":"l","paddingX":"l","horizontal":"center","flex":1,"children":["$","$Le",null,{"horizontal":"center","fillWidth":true,"minHeight":"0","children":["$","$L12",null,{"children":["$","$L9",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lb",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$L2",null,{"as":"section","fill":true,"center":true,"paddingBottom":"160","children":[["$","$L6",null,{"marginBottom":"s","variant":"display-strong-xl","children":"404"}],["$","$L4",null,{"marginBottom":"l","variant":"display-default-xs","children":"Page Not Found"}],["$","$L6",null,{"onBackground":"neutral-weak","children":"The page you are looking for does not exist."}]]}],"notFoundStyles":[]}]}]}]}],["$","$Le",null,{"as":"footer","position":"relative","fillWidth":true,"padding":"8","horizontal":"center","mobileDirection":"column","children":["$","$Le",null,{"className":"Footer_mobile__TYNqJ","maxWidth":"m","paddingY":"8","paddingX":"16","gap":"16","horizontal":"space-between","vertical":"center","children":[["$","$L6",null,{"variant":"body-default-s","onBackground":"neutral-strong","children":["Published on ","May 5, 2025"]}],["$","$Le",null,{"gap":"16","children":[["$","$L13","Email",{"href":"mailto:bryce@bryceserv.is","icon":"email","tooltip":"Email","size":"s","variant":"ghost"}],["$","$L13","Pretty Good Privacy",{"href":"/9842EC1B.asc","icon":"pgp","tooltip":"Pretty Good Privacy","size":"s","variant":"ghost"}],["$","$L13","Resume",{"href":"/resume.pdf","icon":"doc","tooltip":"Resume","size":"s","variant":"ghost"}],["$","$L13","GitHub",{"href":"https://github.com/servisbryce/","icon":"github","tooltip":"GitHub","size":"s","variant":"ghost"}],["$","$L13","LinkedIn",{"href":"https://www.linkedin.com/in/bryce-servis-328381357","icon":"linkedin","tooltip":"LinkedIn","size":"s","variant":"ghost"}],["$","$L13","Discord",{"href":"https://discord.com/users/1343387932098035782","icon":"discord","tooltip":"Discord","size":"s","variant":"ghost"}]]}]]}]}]]}]}]}]
7:[["$","$L14",null,{"style":{"marginTop":"var(--static-space-24)","marginBottom":"var(--static-space-12)"},"level":1,"id":"what-is-a-dynamic-thread-pool-compared-to-a-static-thread-pool","children":"What is a dynamic thread pool compared to a static thread pool?"}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"A static thread pool is an effective and flexible way to parallelize any task. It has an unchanging number of threads in a structure called a pool. A program may assign functions to these pools, and a thread will elect to compute an assigned function."}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"On the contrary, a dynamic thread pool follows the same notion, except the number of threads in the pool may contract or expand depending on the program's priorities and preferences. A dynamic thread pool is significantly more scalable than a static one because if it becomes overloaded with tasks, it may request more threads to accommodate the increased load and then kill these threads when the load eventually decreases."}],"\n",["$","$L14",null,{"style":{"marginTop":"var(--static-space-24)","marginBottom":"var(--static-space-12)"},"level":1,"id":"when-should-a-dynamic-thread-pool-be-used","children":"When should a dynamic thread pool be used?"}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"A dynamic thread pool should be used whenever the workload is unpredictable. Unpredictable workloads are typical in many types of applications, especially in applications that serve requests (servers). The ability for a thread pool to scale dynamically to accommodate an elevated but unanticipated demand is a much-preferred alternative to outright denying requests. However, there must be limits to prevent the dynamic thread pool from endlessly scaling itself up until it starts to overload the underlying operating system it's running on. Furthermore, the dynamic thread pool must also know when it's appropriate to scale down to prevent an excess of threads from accumulating that aren't going to be used."}],"\n",["$","$L14",null,{"style":{"marginTop":"var(--static-space-24)","marginBottom":"var(--static-space-12)"},"level":1,"id":"what-algorithms-determine-when-to-scale-a-dynamic-thread-pool","children":"What algorithms determine when to scale a dynamic thread pool?"}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"The stepwise scheduling algorithm is a standard method for determining when and how to scale dynamic thread pools. The stepwise scheduler is a straightforward yet effective way to scale the dynamic thread pool based on existing usage data without involving complex analysis. You must set a baseline thread target, regularly telling the algorithm the number of threads it wants in the pool whenever possible. Then, you must place a maximum for how many threads may be in the dynamic thread pool. Otherwise, you risk the dynamic thread pool from scaling up too much and taking down the entire operating system. The dynamic pool may not scale more than the maximum thread target. Finally, you must set a stepwise thread amount that tells the dynamic thread pool how much it should expand whenever it is at maximum load; the stepwise thread amount should be about 10% of the thread target and remain constant. However, your needs may change depending on your application."}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"The stepwise scheduling algorithm assumes that whenever the thread pool is overloaded, instead of expanding the pool by the minimum amount necessary to accommodate the demand at that moment, it should overallocate the number of threads to accommodate for an increased trend in demand over a prolonged period. Stepwise scheduling is helpful for applications such as servers that often experience protracted periods of unanticipated traffic."}],"\n",["$","$L14",null,{"style":{"marginTop":"var(--static-space-24)","marginBottom":"var(--static-space-12)"},"level":1,"id":"what-are-the-tradeoffs-for-using-a-dynamic-thread-pool-rather-than-a-static-thread-pool","children":"What are the tradeoffs for using a dynamic thread pool rather than a static thread pool?"}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"A static thread pool never has to worry about the performance impact of creating or killing threads, as it only has to make them once. However, when overloaded, a static thread pool is forced to deny requests rather than serve them, which leads to unreliability in your application during exceptionally high loads."}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"Furthermore, suppose the dynamic thread pool is misconfigured. In that case, it may expand too aggressively and lead to system instability, resulting in requests being denied or the program outright crashing due to it starving from a lack of resources."}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"However, a properly configured and supervised dynamic thread pool is a scalable alternative to outright denying requests and disrupting others. It's a much more favorable alternative to scale up temporarily to accommodate prolonged bursts in traffic than to turn away empty-handed users."}],"\n",["$","$L6",null,{"style":{"lineHeight":"175%"},"variant":"body-default-m","onBackground":"neutral-medium","marginTop":"8","marginBottom":"12","children":"Dynamic thread pools should not be used for applications with a constant or predictable workload, such as payroll or file backup systems. However, applications that have an unpredictable workload, such as web servers or streaming platforms. The dynamic thread pool must be configured to accommodate the balancing act between stability and raw processing power. If balanced improperly, the dynamic thread pool may cause the application to become unstable and prone to crashing. However, balancing this tradeoff is easy using the abovementioned stepwise algorithm."}]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"The Case for Dynamic Thread Pools"}],["$","meta","3",{"name":"description","content":"The reasons why you should consider using dynamic thread pools in your applications."}],["$","meta","4",{"name":"robots","content":"index, follow"}],["$","meta","5",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","6",{"property":"og:title","content":"The Case for Dynamic Thread Pools"}],["$","meta","7",{"property":"og:description","content":"The reasons why you should consider using dynamic thread pools in your applications."}],["$","meta","8",{"property":"og:url","content":"https://bryceserv.is/blog/thecasefordynamicthreadpools/"}],["$","meta","9",{"property":"og:image","content":"https://bryceserv.is/images/gallery/thecasefordynamicthreadpools.jpg"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2025-04-06"}],["$","meta","12",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","13",{"name":"twitter:title","content":"The Case for Dynamic Thread Pools"}],["$","meta","14",{"name":"twitter:description","content":"The reasons why you should consider using dynamic thread pools in your applications."}],["$","meta","15",{"name":"twitter:image","content":"https://bryceserv.is/images/gallery/thecasefordynamicthreadpools.jpg"}],["$","meta","16",{"name":"next-size-adjust"}]]
1:null
